---
- hosts: webservers
  tasks:
    - set_fact: this_release_ts={{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}
    - set_fact: this_release_path={{ releases_path }}/{{ this_release_ts }}

    - debug: msg='New release path {{ this_release_path }}'

    - name: Create new release dir
      file: path={{ this_release_path }} state=directory

    - name: Update code
      git: repo={{ git_url }} dest={{ this_release_path }} version={{ git_version }} accept_hostkey=yes
      register: git

    - debug: msg='Updated repo from {{ git.before }} to {{ git.after }}'

    - name: Create shared dir
      file: path={{ shared_path }} state=directory

    - name: Create shared sub-dirs
      file: path={{ shared_path }}/{{ item }} state=directory
      with_items:
        - config
        - log
        - tmp
        - vendor
        - vendor/bundle

    - name: Create config files
      template:
        src: "roles/internal/rails/templates/{{ item }}.j2"
        dest: "{{ this_release_path }}/{{ item }}"
        force: yes
      with_items:
        - config/database.yml
        - config/secrets.yml

    - name: Symlink shared files
      file: src={{ shared_path }}/{{ item }} dest={{ this_release_path }}/{{ item }} state=link force=yes
      with_items:
        - log
        - tmp
        - vendor/bundle

    - name: Install gems
      command: '{{ ruby.path }}/bin/bundle install --deployment --without="development test"'
      args:
        chdir: '{{ this_release_path }}'

    - name: Precompile assets
      command: "{{ ruby.path }}/bin/rake assets:precompile chdir={{ this_release_path }}"
      environment:
        RAILS_ENV: '{{ rails.env }}'

    - name: Migrate database
      command: "{{ ruby.path }}/bin/rake db:migrate chdir={{ this_release_path }}"
      environment:
        RAILS_ENV: '{{ rails.env }}'

    - name: Symlink new release
      file: src={{ this_release_path }} dest={{ current_release_path }} state=link force=yes

    - name: Restart nginx
      command: sudo service nginx restart

    - name: Cleanup
      shell: "ls -1t {{ releases_path }}|tail -n +{{ keep_releases + 1 }}|xargs rm -rf"
      args:
        chdir: '{{ releases_path }}'
